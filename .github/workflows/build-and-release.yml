name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pygame numpy matplotlib pyinstaller

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile game.py

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: game-linux
        path: dist/game

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pygame numpy matplotlib pyinstaller

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile game.py

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: game-windows
        path: dist/game.exe

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
    - name: Download Linux artifact
      uses: actions/download-artifact@v2
      with:
        name: game-linux
        path: ./dist

    - name: Download Windows artifact
      uses: actions/download-artifact@v2
      with:
        name: game-windows
        path: ./dist

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        draft: false
        prerelease: false

    - name: Upload Linux artifact to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/game
        asset_name: game-linux
        asset_content_type: application/octet-stream

    - name: Upload Windows artifact to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/game.exe
        asset_name: game-windows.exe
        asset_content_type: application/octet-stream